{"version":3,"file":"static/js/4717.9f97f545.chunk.js","mappings":"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","sources":["App/logo.svg","App/oidc.tsx","keycloak-theme/login/valuesTransferredOverUrl.ts","App/App.tsx","App/index.ts"],"sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#61DAFB\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.6ce24c58023cc2f8fd88fe9d219db6c6.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useContext, createContext, useEffect } from \"react\";\nimport Keycloak_js from \"keycloak-js\";\nimport { id } from \"tsafe/id\";\nimport { addParamToUrl } from \"powerhooks/tools/urlSearchParams\";\nimport type { ReturnType } from \"tsafe/ReturnType\";\nimport type { Param0 } from \"tsafe/Param0\";\nimport { assert } from \"tsafe/assert\";\nimport { createKeycloakAdapter } from \"keycloakify\";\nimport jwt_decode from \"jwt-decode\";\nimport { Evt } from \"evt\";\n\nexport declare type OidcClient = OidcClient.LoggedIn | OidcClient.NotLoggedIn;\n\nexport declare namespace OidcClient {\n    export type NotLoggedIn = {\n        isUserLoggedIn: false;\n        login: (params: {\n            //To prevent infinite loop if the user access a page that requires to\n            //be authenticated but cancel (clicks back). \n            doesCurrentHrefRequiresAuth: boolean;\n        }) => Promise<never>;\n    };\n\n    export type LoggedIn = {\n        isUserLoggedIn: true;\n        getAccessToken: ()=> string;\n        logout: (params: { redirectTo: \"home\" | \"current page\" }) => Promise<never>;\n        //If we have sent a API request to change user's email for example\n        //and we want that jwt_decode(oidcClient.getAccessToken()).email be the new email\n        //in this case we would call this method...\n        updateTokenInfos: () => Promise<void>;\n    };\n}\n\ntype Params = {\n    url: string;\n    realm: string;\n    clientId: string;\n    transformUrlBeforeRedirect: (url: string) => string;\n    getUiLocales: () => string;\n    log?: typeof console.log;\n};\n\nasync function createKeycloakOidcClient(params: Params): Promise<OidcClient> {\n    const {\n        url,\n        realm,\n        clientId,\n        transformUrlBeforeRedirect,\n        getUiLocales,\n        log\n    } = params;\n\n    const keycloakInstance = new Keycloak_js({ url, realm, clientId });\n\n    let redirectMethod: ReturnType<\n        Param0<typeof createKeycloakAdapter>[\"getRedirectMethod\"]\n    > = \"overwrite location.href\";\n\n    const isAuthenticated = await keycloakInstance\n        .init({\n            onLoad: \"check-sso\",\n            silentCheckSsoRedirectUri: `${window.location.origin}/silent-sso.html`,\n            responseMode: \"query\",\n            checkLoginIframe: false,\n            adapter: createKeycloakAdapter({\n                transformUrlBeforeRedirect: url =>\n                    [url].map(transformUrlBeforeRedirect).map(\n                        url =>\n                            addParamToUrl({\n                                url,\n                                \"name\": \"ui_locales\",\n                                \"value\": getUiLocales()\n                            }).newUrl\n                    )[0],\n                keycloakInstance,\n                getRedirectMethod: () => redirectMethod\n            })\n        })\n        .catch((error: Error) => error);\n\n    //TODO: Make sure that result is always an object.\n    if (isAuthenticated instanceof Error) {\n        throw isAuthenticated;\n    }\n\n    const login: OidcClient.NotLoggedIn[\"login\"] = async ({\n        doesCurrentHrefRequiresAuth\n    }) => {\n        if (doesCurrentHrefRequiresAuth) {\n            redirectMethod = \"location.replace\";\n        }\n\n        await keycloakInstance.login({ \"redirectUri\": window.location.href });\n\n        return new Promise<never>(() => { });\n    };\n\n    if (!isAuthenticated) {\n        return id<OidcClient.NotLoggedIn>({\n            \"isUserLoggedIn\": false,\n            login\n        });\n    }\n\n    let currentAccessToken= keycloakInstance.token!;\n\n    const oidcClient = id<OidcClient.LoggedIn>({\n        \"isUserLoggedIn\": true,\n        \"getAccessToken\": ()=> currentAccessToken,\n        \"logout\": async ({ redirectTo }) => {\n            await keycloakInstance.logout({\n                \"redirectUri\": (() => {\n                    switch (redirectTo) {\n                        case \"current page\":\n                            return window.location.href;\n                        case \"home\":\n                            return window.location.origin;\n                    }\n                })()\n            });\n\n            return new Promise<never>(() => { });\n        },\n        \"updateTokenInfos\": async () => {\n            await keycloakInstance.updateToken(-1);\n\n            currentAccessToken = keycloakInstance.token!;\n        }\n    });\n\n    (function callee() {\n        const msBeforeExpiration = jwt_decode<{ exp: number }>(currentAccessToken)[\"exp\"] * 1000 - Date.now();\n\n        setTimeout(async () => {\n\n            log?.(`OIDC access token will expire in ${minValiditySecond} seconds, waiting for user activity before renewing`);\n\n            await Evt.merge([\n                Evt.from(document, \"mousemove\"),\n                Evt.from(document, \"keydown\")\n            ]).waitFor();\n\n            log?.(\"User activity detected. Refreshing access token now\");\n\n            const error = await keycloakInstance.updateToken(-1).then(\n                () => undefined,\n                (error: Error) => error\n            );\n\n            if (error) {\n                log?.(\"Can't refresh OIDC access token, getting a new one\");\n                //NOTE: Never resolves\n                await login({ \"doesCurrentHrefRequiresAuth\": true });\n            }\n\n            currentAccessToken = keycloakInstance.token!;\n\n            callee();\n            \n        }, msBeforeExpiration - minValiditySecond * 1000);\n    })();\n\n    return oidcClient;\n}\n\nconst minValiditySecond = 25;\n\nconst oidcClientContext = createContext<OidcClient | undefined>(undefined);\n\nexport function createOidcClientProvider(params: Params) {\n\n\n    const prOidcClient = createKeycloakOidcClient(params);\n\n    function OidcClientProvider(props: { children: React.ReactNode; }) {\n\n        const { children } = props;\n\n        const [oidcClient, setOidcClient] = useState<OidcClient | undefined>(undefined);\n\n        useEffect(() => {\n\n            prOidcClient.then(setOidcClient);\n\n        }, []);\n\n        if (oidcClient === undefined) {\n            return null;\n        }\n\n        return (\n            <oidcClientContext.Provider value={oidcClient}>\n                {children}\n            </oidcClientContext.Provider>\n        );\n\n    }\n\n    return { OidcClientProvider };\n\n}\n\nexport function useOidcClient() {\n    const oidcClient = useContext(oidcClientContext);\n    assert(oidcClient !== undefined);\n    return { oidcClient };\n}\n","import { kcContext } from \"./kcContext\";\nimport {\n    retrieveParamFromUrl,\n    addParamToUrl,\n    updateSearchBarUrl\n} from \"powerhooks/tools/urlSearchParams\";\nimport { capitalize } from \"tsafe/capitalize\";\n\nexport const { foo, addFooToQueryParams } = (() => {\n    const queryParamName = \"foo\";\n\n    type Type = { foo: number; };\n\n    const value = (()=> {\n\n        const unparsedValue = read({ queryParamName });\n\n        if( unparsedValue === undefined ){\n            return undefined;\n        }\n\n        return JSON.parse(unparsedValue) as Type;\n\n    })();\n\n    function addToUrlQueryParams(params: {\n        url: string;\n        value: Type;\n    }): string {\n        const { url, value } = params;\n\n        return addParamToUrl({\n            url,\n            \"name\": queryParamName,\n            \"value\": JSON.stringify(value)\n        }).newUrl;\n    }\n\n    const out = {\n        [queryParamName]: value,\n        [`add${capitalize(queryParamName)}ToQueryParams` as const]: addToUrlQueryParams\n    } as const;\n\n    return out;\n})();\n\nexport const { bar, addBarToQueryParams } = (() => {\n    const queryParamName = \"bar\";\n\n    type Type = string;\n\n    const value = (()=> {\n\n        const unparsedValue = read({ queryParamName });\n\n        if( unparsedValue === undefined ){\n            return undefined;\n        }\n\n        return JSON.parse(unparsedValue) as Type;\n\n    })();\n\n    function addToUrlQueryParams(params: {\n        url: string;\n        value: Type;\n    }): string {\n        const { url, value } = params;\n\n        return addParamToUrl({\n            url,\n            \"name\": queryParamName,\n            \"value\": JSON.stringify(value)\n        }).newUrl;\n    }\n\n    const out = {\n        [queryParamName]: value,\n        [`add${capitalize(queryParamName)}ToQueryParams` as const]: addToUrlQueryParams\n    } as const;\n\n    return out;\n})();\n\n\nfunction read(params: { queryParamName: string }): string | undefined {\n    if (kcContext === undefined || process.env.NODE_ENV !== \"production\") {\n        //NOTE: We do something only if we are really in Keycloak\n        return undefined;\n    }\n\n    const { queryParamName } = params;\n\n    read_from_url: {\n        const result = retrieveParamFromUrl({\n            \"url\": window.location.href,\n            \"name\": queryParamName\n        });\n\n        if (!result.wasPresent) {\n            break read_from_url;\n        }\n\n        const { newUrl, value: serializedValue } = result;\n\n        updateSearchBarUrl(newUrl);\n\n        localStorage.setItem(queryParamName, serializedValue);\n\n        return serializedValue;\n    }\n\n    //Reading from local storage\n    const serializedValue = localStorage.getItem(queryParamName);\n\n    if (serializedValue === null) {\n        throw new Error(\n            `Missing ${queryParamName} in URL when redirecting to login page`\n        );\n    }\n\n    return serializedValue;\n}\n","import \"./App.css\";\nimport logo from \"./logo.svg\";\nimport myimg from \"./myimg.png\";\nimport { createOidcClientProvider, useOidcClient } from \"./oidc\";\nimport { addFooToQueryParams, addBarToQueryParams } from \"../keycloak-theme/login/valuesTransferredOverUrl\";\nimport jwt_decode from \"jwt-decode\";\n\nconst { OidcClientProvider } = createOidcClientProvider({\n    url: \"https://auth.code.gouv.fr/auth\",\n    realm: \"keycloakify\",\n    clientId: \"starter\",\n    //This function will be called just before redirecting,\n    //it should return the current langue.\n    //kcContext.locale.currentLanguageTag will be what this function returned just before redirecting.\n    getUiLocales: () => \"en\",\n    transformUrlBeforeRedirect: url =>\n        [url]\n            //Instead of foo and bar you could have isDark for example or any other state that you wish to\n            //transfer from the main app to the login pages.\n            .map(url => addFooToQueryParams({ url, value: { foo: 42 } }))\n            .map(url => addBarToQueryParams({ url, value: \"value of bar transferred to login page\" }))\n        [0],\n    log: console.log\n});\n\nexport default function App() {\n    return (\n        <OidcClientProvider>\n            <ContextualizedApp />\n        </OidcClientProvider>\n    );\n\n}\n\nfunction ContextualizedApp() {\n\n    const { oidcClient } = useOidcClient();\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n            {\n                oidcClient.isUserLoggedIn ?\n                    <>\n                        <h1>You are authenticated !</h1>\n                        <pre style={{ textAlign: \"left\" }}>{JSON.stringify(jwt_decode(oidcClient.getAccessToken()), null, 2)}</pre>\n                        <button onClick={() => oidcClient.logout({ redirectTo: \"home\" })}>Logout</button>\n                    </>\n                    :\n                    <>\n                        <button onClick={() => oidcClient.login({ doesCurrentHrefRequiresAuth: false })}>Login</button>\n                    </>\n            }\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <img src={myimg} alt=\"test_image\" />\n                <p style={{ \"fontFamily\": '\"Work Sans\"' }}>Hello world</p>\n                <p>Check out all keycloak pages in the <a href=\"https://starter.keycloakify.dev/storybook\">Storybook</a>!</p>\n            </header>\n        </div>\n    );\n}\n","import App from \"./App\";\nexport * from \"./App\";\n\nexport default App;\n"],"names":["createKeycloakOidcClient","params","url","realm","clientId","transformUrlBeforeRedirect","getUiLocales","log","keycloakInstance","Keycloak_js","redirectMethod","init","onLoad","silentCheckSsoRedirectUri","window","location","origin","responseMode","checkLoginIframe","adapter","createKeycloakAdapter","map","addParamToUrl","newUrl","getRedirectMethod","catch","error","isAuthenticated","Error","login","doesCurrentHrefRequiresAuth","href","Promise","id","currentAccessToken","token","oidcClient","redirectTo","logout","updateToken","callee","msBeforeExpiration","jwt_decode","Date","now","setTimeout","minValiditySecond","Evt","document","waitFor","then","oidcClientContext","createContext","undefined","queryParamName","value","unparsedValue","read","JSON","parse","out","capitalize","stringify","addFooToQueryParams","foo","addBarToQueryParams","bar","kcContext","result","retrieveParamFromUrl","wasPresent","serializedValue","updateSearchBarUrl","localStorage","setItem","getItem","prOidcClient","OidcClientProvider","props","children","useState","setOidcClient","useEffect","Provider","createOidcClientProvider","console","ContextualizedApp","useContext","assert","useOidcClient","className","isUserLoggedIn","style","textAlign","getAccessToken","onClick","src","logo","alt"],"sourceRoot":""}