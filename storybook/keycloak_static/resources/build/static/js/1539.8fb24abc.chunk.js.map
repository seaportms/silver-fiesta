{"version":3,"file":"static/js/1539.8fb24abc.chunk.js","mappings":"2OAQc,SAAUA,EAAoBC,GACxC,IAAQC,EAAwDD,EAAxDC,UAAWC,EAA6CF,EAA7CE,KAAMC,EAAuCH,EAAvCG,gBAAiBC,EAAsBJ,EAAtBI,SAAUC,EAAYL,EAAZK,QAE5CC,GAAiBC,EAAAA,EAAAA,GAAgB,CACrCJ,gBAAAA,EACAE,QAAAA,IAFIC,aAKAE,EAA+DP,EAA/DO,IAAKC,EAA0DR,EAA1DQ,iBAAkBC,EAAwCT,EAAxCS,kBAAmBC,EAAqBV,EAArBU,iBAE1CC,EAAgBV,EAAhBU,IAAKC,EAAWX,EAAXW,OAEb,GAAgDC,EAAAA,EAAAA,WAAS,GAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KAEA,OACIC,EAAAA,EAAAA,KAACb,EAAQc,OAAAA,OAAAA,CAAAA,EACD,CAAEjB,UAAAA,EAAWC,KAAAA,EAAMC,gBAAAA,EAAiBE,QAAAA,GAAS,CACjDc,eAAgBV,EAAiBW,OAAO,UACxCC,uBAAuB,EACvBC,WAAYV,EAAI,kBAAgB,CAAAW,UAEhCC,EAAAA,EAAAA,MAAAA,OAAAA,OAAAA,OAAAA,CAAMC,GAAG,mBAAmBC,UAAWpB,EAAa,eAAgBqB,OAAQnB,EAAIoB,mBAAoBC,OAAO,QAAM,CAAAN,SAAAA,EAC7GN,EAAAA,EAAAA,KAACa,EAAAA,EAAqB,CAClB7B,UAAWA,EACX8B,+BAAgCf,EAChCd,KAAMA,EACNI,aAAcA,IAEjBI,IACGO,EAAAA,EAAAA,KAAAA,MAAAA,OAAAA,OAAAA,CAAKS,UAAU,cAAY,CAAAH,UACvBN,EAAAA,EAAAA,KAAAA,MAAAA,OAAAA,OAAAA,CAAKS,UAAWpB,EAAa,wBAAsB,CAAAiB,UAC/CN,EAAAA,EAAAA,KAAAA,MAAAA,CAAKS,UAAU,cAAa,YAAW,UAAS,eAAef,WAI3Ea,EAAAA,EAAAA,MAAAA,MAAAA,OAAAA,OAAAA,CAAKE,UAAWpB,EAAa,oBAAqB0B,MAAO,CAAE,aAAgB,KAAI,CAAAT,SAAAA,EAC3EN,EAAAA,EAAAA,KAAAA,MAAAA,OAAAA,OAAAA,CAAKQ,GAAG,kBAAkBC,UAAWpB,EAAa,uBAAqB,CAAAiB,UACnEN,EAAAA,EAAAA,KAAAA,MAAAA,OAAAA,OAAAA,CAAKS,UAAWpB,EAAa,8BAA4B,CAAAiB,UACrDN,EAAAA,EAAAA,KAAAA,OAAAA,CAAAM,UACIN,EAAAA,EAAAA,KAAAA,IAAAA,OAAAA,OAAAA,CAAGgB,KAAMzB,EAAI0B,UAAQ,CAAAX,SAAGX,EAAI,2BAKxCK,EAAAA,EAAAA,KAAAA,MAAAA,OAAAA,OAAAA,CAAKQ,GAAG,kBAAkBC,UAAWpB,EAAa,uBAAqB,CAAAiB,UACnEN,EAAAA,EAAAA,KAAAA,QAAAA,CACIS,WAAWS,EAAAA,EAAAA,GACP7B,EAAa,iBACbA,EAAa,wBACbA,EAAa,sBACbA,EAAa,uBAEjB8B,KAAK,SACLC,MAAOxB,EAAO,cACdyB,UAAWvB,iBAOtC,C","sources":["../node_modules/keycloakify/src/login/pages/RegisterUserProfile.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { UserProfileFormFields } from \"./shared/UserProfileFormFields\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function RegisterUserProfile(props: PageProps<Extract<KcContext, { pageId: \"register-user-profile.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { url, messagesPerField, recaptchaRequired, recaptchaSiteKey } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const [isFomSubmittable, setIsFomSubmittable] = useState(false);\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doUseDefaultCss, classes }}\n            displayMessage={messagesPerField.exists(\"global\")}\n            displayRequiredFields={true}\n            headerNode={msg(\"registerTitle\")}\n        >\n            <form id=\"kc-register-form\" className={getClassName(\"kcFormClass\")} action={url.registrationAction} method=\"post\">\n                <UserProfileFormFields\n                    kcContext={kcContext}\n                    onIsFormSubmittableValueChange={setIsFomSubmittable}\n                    i18n={i18n}\n                    getClassName={getClassName}\n                />\n                {recaptchaRequired && (\n                    <div className=\"form-group\">\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <div className=\"g-recaptcha\" data-size=\"compact\" data-sitekey={recaptchaSiteKey} />\n                        </div>\n                    </div>\n                )}\n                <div className={getClassName(\"kcFormGroupClass\")} style={{ \"marginBottom\": 30 }}>\n                    <div id=\"kc-form-options\" className={getClassName(\"kcFormOptionsClass\")}>\n                        <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\n                            <span>\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                        <input\n                            className={clsx(\n                                getClassName(\"kcButtonClass\"),\n                                getClassName(\"kcButtonPrimaryClass\"),\n                                getClassName(\"kcButtonBlockClass\"),\n                                getClassName(\"kcButtonLargeClass\")\n                            )}\n                            type=\"submit\"\n                            value={msgStr(\"doRegister\")}\n                            disabled={!isFomSubmittable}\n                        />\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n"],"names":["RegisterUserProfile","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","url","messagesPerField","recaptchaRequired","recaptchaSiteKey","msg","msgStr","useState","isFomSubmittable","setIsFomSubmittable","_jsx","Object","displayMessage","exists","displayRequiredFields","headerNode","children","_jsxs","id","className","action","registrationAction","method","UserProfileFormFields","onIsFormSubmittableValueChange","style","href","loginUrl","clsx","type","value","disabled"],"sourceRoot":""}