{"version":3,"file":"static/js/5438.dc65c859.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/login/lib/useGetClassName.ts","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/login/pages/LoginResetPassword.tsx","../node_modules/keycloakify/node_modules/tsafe/src/typeGuard.ts","../node_modules/keycloakify/src/tools/clsx.ts"],"sourcesContent":["import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/login/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcHtmlClass\": \"login-pf\",\n        \"kcLoginClass\": \"login-pf-page\",\n        \"kcContentWrapperClass\": \"row\",\n        \"kcHeaderClass\": \"login-pf-page-header\",\n        \"kcHeaderWrapperClass\": undefined,\n        \"kcFormCardClass\": \"card-pf\",\n        \"kcFormCardAccountClass\": \"login-pf-accounts\",\n        \"kcFormSocialAccountClass\": \"login-pf-social-section\",\n        \"kcFormSocialAccountContentClass\": \"col-xs-12 col-sm-6\",\n        \"kcFormHeaderClass\": \"login-pf-header\",\n        \"kcLocaleWrapperClass\": undefined,\n        \"kcFeedbackErrorIcon\": \"pficon pficon-error-circle-o\",\n        \"kcFeedbackWarningIcon\": \"pficon pficon-warning-triangle-o\",\n        \"kcFeedbackSuccessIcon\": \"pficon pficon-ok\",\n        \"kcFeedbackInfoIcon\": \"pficon pficon-info\",\n        \"kcResetFlowIcon\": \"pficon pficon-arrow fa-2x\",\n        \"kcFormGroupClass\": \"form-group\",\n        \"kcLabelWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcSignUpClass\": \"login-pf-signup\",\n        \"kcInfoAreaWrapperClass\": undefined,\n\n        \"kcLogoClass\": \"login-pf-brand\",\n        \"kcContainerClass\": \"container-fluid\",\n        \"kcContentClass\": \"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3\",\n        \"kcFeedbackAreaClass\": \"col-md-12\",\n        \"kcLocaleClass\": \"col-xs-12 col-sm-1\",\n        \"kcAlertIconClasserror\": \"pficon pficon-error-circle-o\",\n\n        \"kcFormAreaClass\": \"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2\",\n        \"kcFormSocialAccountListClass\": \"login-pf-social list-unstyled login-pf-social-all\",\n        \"kcFormSocialAccountDoubleListClass\": \"login-pf-social-double-col\",\n        \"kcFormSocialAccountListLinkClass\": \"login-pf-social-link\",\n        \"kcWebAuthnKeyIcon\": \"pficon pficon-key\",\n        \"kcWebAuthnDefaultIcon\": \"pficon pficon-key\",\n\n        \"kcFormClass\": \"form-horizontal\",\n        \"kcFormGroupErrorClass\": \"has-error\",\n        \"kcLabelClass\": \"control-label\",\n        \"kcInputClass\": \"form-control\",\n        \"kcInputErrorMessageClass\": \"pf-c-form__helper-text pf-m-error required kc-feedback-text\",\n        \"kcInputWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormOptionsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormSettingClass\": \"login-pf-settings\",\n        \"kcTextareaClass\": \"form-control\",\n\n        \"kcInfoAreaClass\": \"col-xs-12 col-sm-4 col-md-4 col-lg-5 details\",\n\n        // user-profile grouping\n        \"kcFormGroupHeader\": \"pf-c-form__group\",\n\n        // css classes for form buttons main class used for all buttons\n        \"kcButtonClass\": \"btn\",\n        // classes defining priority of the button - primary or default (there is typically only one priority button for the form)\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonDefaultClass\": \"btn-default\",\n        // classes defining size of the button\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonBlockClass\": \"btn-block\",\n\n        // css classes for input\n        \"kcInputLargeClass\": \"input-lg\",\n\n        // css classes for form accessability\n        \"kcSrOnlyClass\": \"sr-only\",\n\n        // css classes for select-authenticator form\n        \"kcSelectAuthListClass\": \"list-group list-view-pf\",\n        \"kcSelectAuthListItemClass\": \"list-group-item list-view-pf-stacked\",\n        \"kcSelectAuthListItemFillClass\": \"pf-l-split__item pf-m-fill\",\n        \"kcSelectAuthListItemIconPropertyClass\": \"fa-2x select-auth-box-icon-properties\",\n        \"kcSelectAuthListItemIconClass\": \"pf-l-split__item select-auth-box-icon\",\n        \"kcSelectAuthListItemTitle\": \"select-auth-box-paragraph\",\n        \"kcSelectAuthListItemInfoClass\": \"list-view-pf-main-info\",\n        \"kcSelectAuthListItemLeftClass\": \"list-view-pf-left\",\n        \"kcSelectAuthListItemBodyClass\": \"list-view-pf-body\",\n        \"kcSelectAuthListItemDescriptionClass\": \"list-view-pf-description\",\n        \"kcSelectAuthListItemHeadingClass\": \"list-group-item-heading\",\n        \"kcSelectAuthListItemHelpTextClass\": \"list-group-item-text\",\n\n        // css classes for the authenticators\n        \"kcAuthenticatorDefaultClass\": \"fa list-view-pf-icon-lg\",\n        \"kcAuthenticatorPasswordClass\": \"fa fa-unlock list-view-pf-icon-lg\",\n        \"kcAuthenticatorOTPClass\": \"fa fa-mobile list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnClass\": \"fa fa-key list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnPasswordlessClass\": \"fa fa-key list-view-pf-icon-lg\",\n\n        //css classes for the OTP Login Form\n        \"kcSelectOTPListClass\": \"card-pf card-pf-view card-pf-view-select card-pf-view-single-select\",\n        \"kcSelectOTPListItemClass\": \"card-pf-body card-pf-top-element\",\n        \"kcAuthenticatorOtpCircleClass\": \"fa fa-mobile card-pf-icon-circle\",\n        \"kcSelectOTPItemHeadingClass\": \"card-pf-title text-center\",\n        \"kcFormOptionsWrapperClass\": undefined\n    }\n});\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function LoginResetPassword(props: PageProps<Extract<KcContext, { pageId: \"login-reset-password.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { url, realm, auth } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doUseDefaultCss, classes }}\n            displayMessage={false}\n            headerNode={msg(\"emailForgotTitle\")}\n            infoNode={msg(\"emailInstruction\")}\n        >\n            <form id=\"kc-reset-password-form\" className={getClassName(\"kcFormClass\")} action={url.loginAction} method=\"post\">\n                <div className={getClassName(\"kcFormGroupClass\")}>\n                    <div className={getClassName(\"kcLabelWrapperClass\")}>\n                        <label htmlFor=\"username\" className={getClassName(\"kcLabelClass\")}>\n                            {!realm.loginWithEmailAllowed\n                                ? msg(\"username\")\n                                : !realm.registrationEmailAsUsername\n                                ? msg(\"usernameOrEmail\")\n                                : msg(\"email\")}\n                        </label>\n                    </div>\n                    <div className={getClassName(\"kcInputWrapperClass\")}>\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            name=\"username\"\n                            className={getClassName(\"kcInputClass\")}\n                            autoFocus\n                            defaultValue={auth !== undefined && auth.showUsername ? auth.attemptedUsername : undefined}\n                        />\n                    </div>\n                </div>\n                <div className={clsx(getClassName(\"kcFormGroupClass\"), getClassName(\"kcFormSettingClass\"))}>\n                    <div id=\"kc-form-options\" className={getClassName(\"kcFormOptionsClass\")}>\n                        <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\n                            <span>\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                        <input\n                            className={clsx(\n                                getClassName(\"kcButtonClass\"),\n                                getClassName(\"kcButtonPrimaryClass\"),\n                                getClassName(\"kcButtonBlockClass\"),\n                                getClassName(\"kcButtonLargeClass\")\n                            )}\n                            type=\"submit\"\n                            value={msgStr(\"doSubmit\")}\n                        />\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n"],"names":["useGetClassName","params","defaultClasses","classes","getClassName","useConstCallback","classKey","clsx","createUseClassName","undefined","LoginResetPassword","props","kcContext","i18n","doUseDefaultCss","Template","url","realm","auth","msg","msgStr","_jsx","Object","displayMessage","headerNode","infoNode","children","_jsxs","id","className","action","loginAction","method","htmlFor","loginWithEmailAllowed","registrationEmailAsUsername","type","name","autoFocus","defaultValue","showUsername","attemptedUsername","href","loginUrl","value","typeGuard","_value","isMatched","len","length","i","cls","arg","toAdd","Array","isArray","k","assert"],"sourceRoot":""}