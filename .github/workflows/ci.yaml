name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest
    if: github.event.head_commit.author.name != 'actions'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2.1.3
      with:
        node-version: '16'
    - uses: bahmutov/npm-install@v1
    - run: yarn build
    - run: echo $(node -e 'console.log(require("url").parse(require("./package.json").homepage).host)') > build/CNAME
    - run: npx keycloakify
    - uses: actions/upload-artifact@v2
      with:
        name: standalone_keycloak_theme
        path: build_keycloak/target/*keycloak-theme*.jar
    - run: npx keycloakify --external-assets
    - uses: actions/upload-artifact@v2
      with:
        name: keycloak_theme
        path: build_keycloak/target/*keycloak-theme*.jar
    - uses: actions/upload-artifact@v2
      with:
        name: build
        path: build

  check_if_version_upgraded:
    name: Check if version upgrade
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    outputs:
      from_version: ${{ steps.step1.outputs.from_version }}
      to_version: ${{ steps.step1.outputs.to_version }}
      is_upgraded_version: ${{ steps.step1.outputs.is_upgraded_version }}
    steps:
    - uses: garronej/ts-ci@v2.1.0
      id: step1
      with: 
        action_name: is_package_json_version_upgraded
        branch: ${{ github.head_ref || github.ref }}

  create_github_release:
    runs-on: ubuntu-latest
    needs: 
      - check_if_version_upgraded
      
    permissions:
      deployments: write      # to deploy to Pages
      id-token: write
    # We create a release only if the version have been upgraded and we are on a default branch
    if: needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true' && github.event_name == 'push'
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: keycloak_theme
    - run: mkdir jars
    - run: mv *keycloak-theme*.jar jars/keycloak-theme.jar
    - uses: actions/download-artifact@v2
      with:
        name: standalone_keycloak_theme
    - run: mv *keycloak-theme*.jar jars/standal
    - uses: softprops/action-gh-release@v1
      with:
        name: Release v${{ needs.check_if_version_upgraded.outputs.to_version }}
        tag_name: v${{ needs.check_if_version_upgraded.outputs.to_version }}
        target_commitish: ${{ github.head_ref || github.ref }}
        generate_release_notes: true
        files: |
          jars/keycloak-theme.jar
          jars/standalone-keycloak-theme.jar
        draft: false
      env:
        GITHUB_TOKEN: ${{ github.token }}

#  docker:
#    runs-on: ubuntu-latest
#    needs: 
#      - check_if_version_upgraded
#      - create_github_release
#    steps:
#      - uses: actions/checkout@v2
#      - uses: docker/setup-qemu-action@v1
#      - uses: docker/setup-buildx-action@v1
#      - uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Computing Docker image tags
#        id: step1
#        env: 
#          IS_UPGRADED_VERSION: ${{ needs.check_if_version_upgraded.outputs.is_upgraded_version }}
#          TO_VERSION: ${{ needs.check_if_version_upgraded.outputs.to_version }}
#        run: |
#          OUT=$GITHUB_REPOSITORY:$TO_VERSION,$GITHUB_REPOSITORY:latest
#          OUT=$(echo "$OUT" | awk '{print tolower($0)}') 
#          echo ::set-output name=docker_tags::$OUT
#      - uses: actions/download-artifact@v2
#        with:
#          name: build
#          path: build
#      - run: tar -cvf build.tar ./build
#      - uses: docker/build-push-action@v2
#        with:
#          push: true
#          context: .
#          tags: ${{ steps.step1.outputs.docker_tags }}
#          file: Dockerfile.ci

  github_pages_app:
    runs-on: ubuntu-latest
    needs: 
      - create_github_release
    permissions:
      pages: write      # to deploy to Pages
      id-token: write
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: build
        path: build
    - run: git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${{github.repository}}.git
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - uses: actions/setup-node@v3.6.0
    - run: npx -y -p gh-pages@3.0.0 gh-pages -u "github-actions-bot <actions@github.com>" -d build 

  github_pages_storybook:
    runs-on: ubuntu-latest
    needs: 
      - create_github_release
    permissions:
      pages: write      # to deploy to Pages
      id-token: write
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3.6.0
    - uses: bahmutov/npm-install@v1
    - run: yarn build-keycloak-theme # Only for the assets in public
    - run: yarn build-storybook
    - run: git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${{github.repository}}.git
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - run: npx -y -p gh-pages@3.0.0 gh-pages -u "github-actions-bot <actions@github.com>" -d storybook-static --dest storybook --add  
        
